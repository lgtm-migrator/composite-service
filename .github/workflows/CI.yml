name: CI
on: [push, pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nodeModules-
      - run: yarn install --frozen-lockfile
      - run: yarn lint
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nodeModules-
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/
  test:
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        node: [10, 12, 14, 15]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: matrix-nodeModules-${{ matrix.os }}-${{ matrix.node }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            matrix-nodeModules-
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/
      - run: yarn install --frozen-lockfile
      - run: yarn test-only
  release:
    needs: [lint, build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nodeModules-
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/
      - run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  website:
    needs: [release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'refs/heads/master'
      - uses: actions/setup-node@v1
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            nodeModules-
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/
      - run: yarn document-api
      - run: cd website && yarn && yarn build
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./website/build
